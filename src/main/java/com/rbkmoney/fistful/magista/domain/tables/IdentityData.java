/*
 * This file is generated by jOOQ.
 */
package com.rbkmoney.fistful.magista.domain.tables;


import com.rbkmoney.fistful.magista.domain.Indexes;
import com.rbkmoney.fistful.magista.domain.Keys;
import com.rbkmoney.fistful.magista.domain.Mst;
import com.rbkmoney.fistful.magista.domain.tables.records.IdentityDataRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.11.5"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class IdentityData extends TableImpl<IdentityDataRecord> {

    /**
     * The reference instance of <code>mst.identity_data</code>
     */
    public static final IdentityData IDENTITY_DATA = new IdentityData();
    private static final long serialVersionUID = -781196644;
    /**
     * The column <code>mst.identity_data.id</code>.
     */
    public final TableField<IdentityDataRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('mst.identity_data_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");
    /**
     * The column <code>mst.identity_data.party_id</code>.
     */
    public final TableField<IdentityDataRecord, UUID> PARTY_ID = createField("party_id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");
    /**
     * The column <code>mst.identity_data.party_contract_id</code>.
     */
    public final TableField<IdentityDataRecord, String> PARTY_CONTRACT_ID = createField("party_contract_id", org.jooq.impl.SQLDataType.VARCHAR, this, "");
    /**
     * The column <code>mst.identity_data.identity_id</code>.
     */
    public final TableField<IdentityDataRecord, String> IDENTITY_ID = createField("identity_id", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");
    /**
     * The column <code>mst.identity_data.identity_provider_id</code>.
     */
    public final TableField<IdentityDataRecord, String> IDENTITY_PROVIDER_ID = createField("identity_provider_id", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");
    /**
     * The column <code>mst.identity_data.identity_class_id</code>.
     */
    public final TableField<IdentityDataRecord, String> IDENTITY_CLASS_ID = createField("identity_class_id", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * Create a <code>mst.identity_data</code> table reference
     */
    public IdentityData() {
        this(DSL.name("identity_data"), null);
    }

    /**
     * Create an aliased <code>mst.identity_data</code> table reference
     */
    public IdentityData(String alias) {
        this(DSL.name(alias), IDENTITY_DATA);
    }

    /**
     * Create an aliased <code>mst.identity_data</code> table reference
     */
    public IdentityData(Name alias) {
        this(alias, IDENTITY_DATA);
    }

    private IdentityData(Name alias, Table<IdentityDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private IdentityData(Name alias, Table<IdentityDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> IdentityData(Table<O> child, ForeignKey<O, IdentityDataRecord> key) {
        super(child, key, IDENTITY_DATA);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IdentityDataRecord> getRecordType() {
        return IdentityDataRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Mst.MST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IDENTITY_DATA_PKEY, Indexes.IDENTITY_DATA_UKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<IdentityDataRecord, Long> getIdentity() {
        return Keys.IDENTITY_IDENTITY_DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<IdentityDataRecord> getPrimaryKey() {
        return Keys.IDENTITY_DATA_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<IdentityDataRecord>> getKeys() {
        return Arrays.<UniqueKey<IdentityDataRecord>>asList(Keys.IDENTITY_DATA_PKEY, Keys.IDENTITY_DATA_UKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IdentityData as(String alias) {
        return new IdentityData(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IdentityData as(Name alias) {
        return new IdentityData(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public IdentityData rename(String name) {
        return new IdentityData(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public IdentityData rename(Name name) {
        return new IdentityData(name, null);
    }
}
