/*
 * This file is generated by jOOQ.
 */
package com.rbkmoney.fistful.magista.domain.tables;


import com.rbkmoney.fistful.magista.domain.Indexes;
import com.rbkmoney.fistful.magista.domain.Keys;
import com.rbkmoney.fistful.magista.domain.Mst;
import com.rbkmoney.fistful.magista.domain.tables.records.WalletDataRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.11.5"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class WalletData extends TableImpl<WalletDataRecord> {

    /**
     * The reference instance of <code>mst.wallet_data</code>
     */
    public static final WalletData WALLET_DATA = new WalletData();
    private static final long serialVersionUID = 1617433726;
    /**
     * The column <code>mst.wallet_data.id</code>.
     */
    public final TableField<WalletDataRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('mst.wallet_data_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");
    /**
     * The column <code>mst.wallet_data.wallet_id</code>.
     */
    public final TableField<WalletDataRecord, String> WALLET_ID = createField("wallet_id", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");
    /**
     * The column <code>mst.wallet_data.wallet_name</code>.
     */
    public final TableField<WalletDataRecord, String> WALLET_NAME = createField("wallet_name", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * Create a <code>mst.wallet_data</code> table reference
     */
    public WalletData() {
        this(DSL.name("wallet_data"), null);
    }

    /**
     * Create an aliased <code>mst.wallet_data</code> table reference
     */
    public WalletData(String alias) {
        this(DSL.name(alias), WALLET_DATA);
    }

    /**
     * Create an aliased <code>mst.wallet_data</code> table reference
     */
    public WalletData(Name alias) {
        this(alias, WALLET_DATA);
    }

    private WalletData(Name alias, Table<WalletDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private WalletData(Name alias, Table<WalletDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> WalletData(Table<O> child, ForeignKey<O, WalletDataRecord> key) {
        super(child, key, WALLET_DATA);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WalletDataRecord> getRecordType() {
        return WalletDataRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Mst.MST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.WALLET_DATA_PKEY, Indexes.WALLET_DATA_UKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<WalletDataRecord, Long> getIdentity() {
        return Keys.IDENTITY_WALLET_DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WalletDataRecord> getPrimaryKey() {
        return Keys.WALLET_DATA_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WalletDataRecord>> getKeys() {
        return Arrays.<UniqueKey<WalletDataRecord>>asList(Keys.WALLET_DATA_PKEY, Keys.WALLET_DATA_UKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WalletData as(String alias) {
        return new WalletData(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WalletData as(Name alias) {
        return new WalletData(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WalletData rename(String name) {
        return new WalletData(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WalletData rename(Name name) {
        return new WalletData(name, null);
    }
}
